{
  "title": "Spectre Theme Tester",
  "schema": {
    "type": "object",
    "title": "Spectre Theme Layout Test Case",
    "properties": {
      "caseinfo": {
        "type": "info",
        "title": "Layout test cases",
        "description": "This testcase was made to help create or update themes for JSON-Editor 2.x version. It shows the available standard elements with all displayable options enabled, such as description and infoText. The buttons/select at the top of the form shows how to toggle various theme specific options.<br><br>Note: If you use this with the 1.x version, some of the fields might not be displayed correctly."
      },
      "standardcase1": {
        "type": "object",
        "$ref": "#/definitions/standardcase1"
      },
      "standardcase2": {
        "type": "object",
        "$ref": "#/definitions/standardcase2"
      },
      "arraycase": {
        "type": "object",
        "$ref": "#/definitions/arraycase"
      },
      "arraycasetabs": {
        "type": "object",
        "$ref": "#/definitions/arraycasetabs"
      },
      "arraycasetabstop": {
        "type": "object",
        "$ref": "#/definitions/arraycasetabstop"
      },
      "arraycasetable": {
        "type": "object",
        "$ref": "#/definitions/arraycasetable"
      },
      "objectcase": {
        "type": "object",
        "$ref": "#/definitions/objectcase"
      },
      "objectcasegrid": {
        "type": "object",
        "$ref": "#/definitions/objectcasegrid"
      },
      "objectcasegridstrict": {
        "type": "object",
        "$ref": "#/definitions/objectcasegridstrict"
      },
      "objectcasecategories": {
        "type": "object",
        "$ref": "#/definitions/objectcasecategories"
      }
    },
    "definitions": {
      "standardcase1": {
        "title": "Input fields with description and infoText enabled.",
        "properties": {
          "stringinput": {
            "type": "string",
            "title": "String input field with description and infoText",
            "description": "String input field with description and infoText.",
            "options": {
              "infoText": "This field is generated by src/editors/string.js",
              "grid_columns": 6,
              "inputAttributes": {
                "placeholder": "enter a text"
              }
            }
          },
          "numberinput": {
            "type": "number",
            "title": "Number input field with description and infoText",
            "description": "Number input field with description and infoText.",
            "options": {
              "infoText": "This field is generated by src/editors/number.js",
              "grid_columns": 6,
              "inputAttributes": {
                "placeholder": "enter a number"
              }
            }
          },
          "integerinput": {
            "type": "integer",
            "title": "Integer input field with description and infoText",
            "description": "Text input field with description and infoText.",
            "options": {
              "infoText": "This field is generated by src/editors/integer.js",
              "grid_columns": 6,
              "inputAttributes": {
                "placeholder": "enter a integer number"
              }
            }
          },
          "rangeinput": {
            "type": "integer",
            "format": "range",
            "title": "Range input field with description and infoText (Integer)",
            "description": "Range input field with description and infoText. (Integer)",
            "options": {
              "infoText": "This field is generated by src/editors/integer.js",
              "grid_columns": 6
            }
          },
          "textareainput": {
            "type": "string",
            "format": "textarea",
            "title": "Textarea input field with description and infoText",
            "description": "Textarea input field with description and infoText.",
            "options": {
              "infoText": "This field is generated by src/editors/string.js",
              "grid_columns": 12,
              "inputAttributes": {
                "placeholder": "enter a text"
              }
            }
          },
          "booleancheckbox": {
            "type": "boolean",
            "format": "checkbox",
            "title": "Boolean checkbox input field with description and infoText",
            "description": "Boolean checkbox input field with description and infoText.",
            "default": true,
            "options": {
              "infoText": "This field is generated by src/editors/checkbox.js",
              "grid_columns": 6
            }
          },
          "select": {
            "type": "string",
            "title": "Select input field with description and infoText",
            "description": "Select input field with description and infoText.",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "options": {
              "enum_titles": [
                "First",
                "Second",
                "Third"
              ],
              "infoText": "This field is generated by src/editors/select.js",
              "grid_columns": 6
            }
          },
          "radio": {
            "type": "string",
            "format": "radio",
            "title": "Radio input field with description and infoText",
            "description": "Radio input field with description and infoText",
            "enum": [
              "Red",
              "Green",
              "Blue"
            ],
            "options": {
              "infoText": "This field is generated by src/editors/radio.js",
              "grid_columns": 6
            }
          },
          "multiselect": {
            "type": "array",
            "format": "select",
            "uniqueItems": true,
            "title": "Multiselect input field with description and infoText - format: select",
            "description": "Multiselect input field with description and infoText. - format: select",
            "items": {
              "type": "string",
              "enum": [
                "bold",
                "italic",
                "smallcaps"
              ]
            },
            "options": {
              "infoText": "This field is generated by src/editors/multiselect.js",
              "grid_columns": 6
            }
          },
          "multiselectcheckbox": {
            "type": "array",
            "format": "checkbox",
            "uniqueItems": true,
            "title": "Multiselect input field with description and infoText - format: checkbox",
            "description": "Multiselect input field with description and infoText. - format: checkbox",
            "items": {
              "type": "string",
              "enum": [
                "bold",
                "italic",
                "smallcaps"
              ]
            },
            "options": {
              "infoText": "This field is generated by src/editors/multiselect.js",
              "grid_columns": 6
            }
          },
          "button": {
            "type": "button",
            "title": "Button",
            "description": "Button with description and infoText.",
            "options": {
              "infoText": "This field is generated by src/editors/button.js",
              "grid_columns": 6
            }
          }
        }
      },
      "standardcase2": {
        "$ref": "#/definitions/standardcase1",
        "title": "Input fields with description, infoText and compact enabled.",
        "properties": {
          "stringinput": {
            "options": {
              "compact": true
            }
          },
          "numberinput": {
            "options": {
              "compact": true
            }
          },
          "integerinput": {
            "options": {
              "compact": true
            }
          },
          "rangeinput": {
            "options": {
              "compact": true
            }
          },
          "textareainput": {
            "options": {
              "compact": true
            }
          },
          "booleancheckbox": {
            "options": {
              "compact": true
            }
          },
          "select": {
            "options": {
              "compact": true
            }
          },
          "radio": {
            "options": {
              "compact": true
            }
          },
          "multiselect": {
            "options": {
              "compact": true
            }
          },
          "multiselectcheckbox": {
            "options": {
              "compact": true
            }
          },
          "button": {
            "options": {
              "compact": true
            }
          }
        }
      },
      "arraycase": {
        "title": "Array",
        "properties": {
          "arraytest": {
            "type": "array",
            "title": "Colors",
            "default": [
              "Red",
              "Green",
              "Blue"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "arraycasetabs": {
        "title": "Array with format: tabs",
        "$ref": "#/definitions/arraycase",
        "properties": {
          "arraytest": {
            "format": "tabs"
          }
        }
      },
      "arraycasetabstop": {
        "title": "Array with format: tabs-top",
        "$ref": "#/definitions/arraycase",
        "properties": {
          "arraytest": {
            "format": "tabs-top"
          }
        }
      },
      "arraycasetable": {
        "title": "Array with format: table",
        "$ref": "#/definitions/arraycase",
        "properties": {
          "arraytest": {
            "format": "table"
          }
        }
      },
      "objectcase": {
        "title": "Object",
        "properties": {
          "objecttest": {
            "type": "object",
            "title": "Object props",
            "properties": {
              "test1": {
                "type": "string"
              },
              "test2": {
                "type": "number"
              },
              "test3": {
                "type": "integer"
              }
            }
          }
        }
      },
      "objectcasegrid": {
        "$ref": "#/definitions/objectcase",
        "title": "Object w. format: grid",
        "properties": {
          "objecttest": {
            "format": "grid"
          }
        }
      },
      "objectcasegridstrict": {
        "title": "Object w. format: grid-strict",
        "$ref": "#/definitions/objectcase",
        "properties": {
          "objecttest": {
            "format": "grid-strict"
          }
        }
      },
      "objectcasecategories": {
        "title": "Object w. format: categories",
        "properties": {
          "objecttest": {
            "type": "object",
            "format": "categories",
            "options": {
              "disable_collapse": true,
              "disable_edit_json": true,
              "disable_properties": true,
              "compact": true
            },
            "properties": {
              "cat1": {
                "type": "object",
                "title": "Category 1",
                "options": {
                  "disable_collapse": true,
                  "disable_edit_json": true,
                  "disable_properties": true,
                  "compact": true
                },
                "properties": {
                  "string": {
                    "type": "string"
                  }
                }
              },
              "cat2": {
                "type": "object",
                "title": "Category 2",
                "options": {
                  "disable_collapse": true,
                  "disable_edit_json": true,
                  "disable_properties": true
                },
                "properties": {
                  "number": {
                    "type": "number"
                  }
                }
              },
              "cat3": {
                "type": "object",
                "title": "Category 3",
                "properties": {
                  "integer": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "startval": {},
  "config": {
    "theme": "spectre",
    "iconlib": "fontawesome5",
    "object_layout": "normal",
    "template": "default",
    "show_errors": "interaction",
    "required_by_default": 0,
    "no_additional_properties": 0,
    "display_required_only": 0,
    "remove_empty_properties": 0,
    "keep_oneof_values": 0,
    "ajax": 0,
    "ajaxCredentials": 0,
    "show_opt_in": 0,
    "disable_edit_json": 0,
    "disable_collapse": 0,
    "disable_properties": 0,
    "disable_array_add": 0,
    "disable_array_reorder": 0,
    "disable_array_delete": 0,
    "enable_array_copy": 0,
    "array_controls_top": 0,
    "disable_array_delete_all_rows": 0,
    "disable_array_delete_last_row": 0,
    "prompt_before_delete": 1,
    "lib_aceeditor": 0,
    "lib_autocomplete": 0,
    "lib_sceditor": 0,
    "lib_simplemde": 0,
    "lib_select2": 0,
    "lib_selectize": 0,
    "lib_choices": 0,
    "lib_flatpickr": 0,
    "lib_signaturepad": 0,
    "lib_mathjs": 0,
    "lib_cleavejs": 0,
    "lib_jodit": 0,
    "lib_jquery": 0,
    "lib_dompurify": 1
  },
  "code": "//window.JSONEditor.defaults.themes.spectre.prototype.options.disable_theme_rules = true;\n\n\n// The following lines are mandatory and readonly. You can add custom code above and below.\nif (jseditor instanceof window.JSONEditor) jseditor.destroy();\njseditor = new window.JSONEditor(document.querySelector(\"#json-editor-form\"), jedata);\n\nvar readyHandler = function() {\n\n    var d = document, button_holder = jseditor.root.theme.getHeaderButtonHolder();\n\n    var createButton = function(text, callback) {\n      var button = jseditor.root.getButton(text, '', text);\n      button.style.maxWidth = '7rem';\n      button_holder.appendChild(button);\n      button_holder.style.display = 'flex';\n      button.addEventListener('click', callback, false);\n      jseditor.root.header.parentNode.insertBefore(button_holder, jseditor.root.header.nextSibling);\n    };\n    var createSelect = function(options, callback) {\n      var sel = jseditor.root.theme.getSelectInput(null, false);\n      sel.classList.add('select-sm','d-inline','mr-2', 'my-1');\n      sel.style.maxWidth = '7rem';\n      jseditor.root.theme.setSelectOptions(sel, Object.values(options), Object.keys(options));\n      sel.addEventListener('change', callback, false);\n      button_holder.appendChild(sel);\n      jseditor.root.header.parentNode.insertBefore(button_holder, jseditor.root.header.nextSibling);\n    };\n    var recreateEditor = function() {\n      if (jseditor instanceof window.JSONEditor) jseditor.destroy();\n      jseditor = new window.JSONEditor(document.querySelector(\"#json-editor-form\"), jedata);\n      jseditor.on('ready', function() {\n        readyHandler();\n      });\n    };\n    \n    createSelect({\n      'Input size': null,\n      'Normal': 'normal',\n      'Small': 'small',\n      'Large': 'large'\n    }, function(e) {\n      if (e.target.value) window.JSONEditor.defaults.themes.spectre.prototype.options.input_size = e.target.value;\n      recreateEditor();\n    });\n\n    createButton('Label Bold', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.label_bold = !window.JSONEditor.defaults.themes.spectre.prototype.options.label_bold;\n      recreateEditor();\n    });\n\n    createButton('Align Bottom', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.align_bottom = !window.JSONEditor.defaults.themes.spectre.prototype.options.align_bottom;\n      recreateEditor();\n    });\n    \n    createButton('Object Border', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.object_border = !window.JSONEditor.defaults.themes.spectre.prototype.options.object_border;\n      recreateEditor();\n    });\n    \n    createButton('Object Indent', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.object_indent = !window.JSONEditor.defaults.themes.spectre.prototype.options.object_indent;\n      recreateEditor();\n    });\n    \n    createButton('Table Border', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.table_border = !window.JSONEditor.defaults.themes.spectre.prototype.options.table_border;\n      recreateEditor();\n    });\n    \n    createButton('Table Zebrastyle', function(e) {\n      window.JSONEditor.defaults.themes.spectre.prototype.options.table_zebrastyle = !window.JSONEditor.defaults.themes.spectre.prototype.options.table_zebrastyle;\n      recreateEditor();\n    });\n  \n\n  \n};\n\njseditor.on('ready', function() {\n  readyHandler();\n});",
  "style": "",
  "desc": "Add optional description here. (HTML format)"
}