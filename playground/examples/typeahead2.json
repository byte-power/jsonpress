{
  "title": "Typeahead Autoprefill",
  "schema": {
    "title": "Watch/Prefill Example",
    "type": "object",
    "properties": {
      "address": {
        "type": "object",
        "title": "Address",
        "format": "grid",
        "options": {
          "disable_collapse": true,
          "disable_edit_json": true,
          "disable_properties": true,
          "grid_columns": 6
        },
        "properties": {
          "street": {
            "type": "string",
            "title": "Street",
            "default": "Spooner Street 21",
            "options": {
              "required": true,
              "grid_columns": 12
            }
          },
          "zip": {
            "type": "string",
            "title": "Zipcode",
            "options": {
              "required": true,
              "grid_columns": 4
            }
          },
          "city": {
            "type": "string",
            "title": "City",
            "options": {
              "required": true,
              "grid_columns": 8
            }
          }
        }
      }
    }
  },
  "startval": {},
  "config": {
    "theme": "bootstrap3",
    "iconlib": "bootstrap3",
    "required_by_default": 1,
    "no_additional_properties": 0,
    "display_required_only": 0,
    "keep_oneof_values": 1,
    "ajax": 0,
    "ajaxCredentials": 0,
    "show_opt_in": 0,
    "disable_edit_json": 0,
    "disable_collapse": 0,
    "disable_properties": 0,
    "disable_array_add": 0,
    "disable_array_reorder": 0,
    "disable_array_delete": 0,
    "enable_array_copy": 0,
    "array_controls_top": 0,
    "disable_array_delete_all_rows": 0,
    "disable_array_delete_last_row": 0,
    "prompt_before_delete": 1,
    "lib_aceeditor": 0,
    "lib_sceditor": 0,
    "lib_simplemde": 0,
    "lib_select2": 0,
    "lib_selectize": 0,
    "lib_flatpickr": 0,
    "lib_signaturepad": 0,
    "lib_mathjs": 0,
    "lib_cleavejs": 0,
    "lib_jquery": 0,
    "lib_dompurify": 1
  },
  "style": "",
  "code": "// includeJS(\"https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.2.1/typeahead.bundle.min.js\")\n// includeCSS(\"https://pmk65.github.io/jedemov2/dist/examples/bloodhound.css\")\n\n// Initialize the Typeahead/Bloodhound engine\n// (See Typeahead/Bloodhound documentation for more info)\nvar zipEngine = new Bloodhound({\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\"navn\"),\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  remote: {\n    url: \"https://dawa.aws.dk/postnumre/%QUERY\",\n    wildcard: \"%QUERY\",\n    cache: true\n  }\n});\nzipEngine.clearPrefetchCache();\nzipEngine.clearRemoteCache();\nzipEngine.initialize();\n\n// The following lines are mandatory and readonly. You can add custom code above and below.\nif (jseditor instanceof window.JSONEditor) jseditor.destroy();\njseditor = new window.JSONEditor(document.querySelector(\"#json-editor-form\"), jedata);\n\n// When JSON-Editor is ready perform action on field(s)\njseditor.on('ready', function() {\n\n  // Watch for changes in the \"zip\" field\n  jseditor.watch('root.address.zip',function() {\n    // Get value from \"zip\" field\n    var zipValue = jseditor.getEditor('root.address.zip').getValue();\n    // If zipvalue a 4 digit number?\n    if (/\\d{4}/.test(zipValue)) {\n      // Do an AJAX lookup using Bloodhound engine\n      zipEngine.search(zipValue, null, function(res) {\n        if (res.length) {\n          // Set the value of \"city\" field to the returned value\n          jseditor.getEditor('root.address.city').setValue(res[2]);\n        }\n      });\n    }\n  });\n\n});",
  "desc": "<h3>Adding autoprefilling based on value in another field using Bloodhound </h3><p>This example shows how to add autofill of field, based on the value of another field, using \"onWatch\" event and Twitter Bloodhound plugin.</p><p>The example uses the Danish Roadname API (because it doesn't require any authentication ðŸ˜„), but you can use whatever API you like (See the documentation for Typeahead/Bloodhound)</p>Try typing a Danish 4 digit zip code like 2100, 2200 etc.</p>"
}