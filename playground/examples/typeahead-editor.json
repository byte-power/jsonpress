{
  "title": "Typeahead Editor Example",
  "schema": {
    "title": "Typeahead/Bloodhound Editor example",
    "type": "object",
    "properties": {
      "roadname": {
        "type": "string",
        "format": "typeahead",
        "title": "Roadname",
        "options": {
          "typeahead": {
            "config": {
              "autoselect": true,
              "highlight": true,
              "hint": true,
              "minLength": 3
            },
            "datasets": {
              "name": "road",
              "display": "tekst",
              "source": "autoroad"
            }
          }
        }
      },
      "products": {
        "type": "array",
        "title": "More roads",
        "items": {
          "type": "object",
          "properties": {
            "roadname": {
              "title": "Roadname",
              "type": "string",
              "format": "typeahead",
              "options": {
                "typeahead": {
                  "config": {
                    "autoselect": true,
                    "highlight": true,
                    "hint": true,
                    "minLength": 3
                  },
                  "datasets": {
                    "name": "road",
                    "display": "tekst",
                    "source": "autoroad"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "startval": {},
  "config": {
    "required_by_default": 1,
    "no_additional_properties": 0,
    "display_required_only": 0,
    "keep_oneof_values": 0,
    "ajax": 0,
    "ajaxCredentials": 0,
    "show_opt_in": 0,
    "disable_edit_json": 0,
    "disable_collapse": 0,
    "disable_properties": 0,
    "disable_array_add": 0,
    "disable_array_reorder": 0,
    "disable_array_delete": 0,
    "enable_array_copy": 0,
    "array_controls_top": 0,
    "disable_array_delete_all_rows": 0,
    "disable_array_delete_last_row": 0,
    "prompt_before_delete": 0,
    "lib_aceeditor": 0,
    "lib_sceditor": 0,
    "lib_simplemde": 0,
    "lib_select2": 0,
    "lib_selectize": 0,
    "lib_flatpickr": 0,
    "lib_signaturepad": 0,
    "lib_mathjs": 0,
    "lib_cleavejs": 0,
    "lib_jquery": 1,
    "lib_dompurify": 0
  },
  "code": "// includeJS(\"https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.2.1/typeahead.bundle.min.js\")\n// Initialize the Typeahead/Bloodhound engine\n// (See Typeahead/Bloodhound documentation for more info)\nvar roadEngine = new Bloodhound({\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\"tekst\"),\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  remote: {\n    url: \"https://dawa.aws.dk/vejnavne/autocomplete?q=%QUERY\",\n    wildcard: \"%QUERY\",\n    cache: true\n  }\n});\nroadEngine.clearRemoteCache();\nroadEngine.initialize();\n\n// Set dataset function for key \"autoroad\"\nwindow.JSONEditor.defaults.typeahead = {\n  autoroad: roadEngine.ttAdapter()\n};\n\n// Add custom editor code\nwindow.JSONEditor.defaults.editors.typeahead = window.JSONEditor.defaults.editors.string.extend({\n  postBuild: function() {\n    this._super();\n\n    if (window.jQuery && window.jQuery.fn && window.jQuery.fn.typeahead) {\n      var defaults = {\n        config: {\n          autoselect: true,\n          hint: true,\n          highlight: false,\n          minLength: 2\n        },\n        datasets: {\n          source: \"\",\n          limit: 10\n        }\n      };\n\n      var options = $.extend(true, {}, defaults, this.options.typeahead);\n\n      if (!options.datasets.source) {\n        console.log(\"Error: No dataset key defined in schema!\");\n        return;\n      }\n\n      if (!window.JSONEditor.defaults.typeahead) {\n        console.log(\"Error: No global dataset source defined!\");\n        return;\n      }\n\n      var self = this, key = options.datasets.source;\n      options.datasets.source = window.JSONEditor.defaults.typeahead[key];\n\n      if (!options.datasets.source) {\n        console.log(\"Error: No global dataset source set for key [\" + key + \"]!\");\n        return;\n      }\n\n      $(this.input)\n      .typeahead(options.config, options.datasets)\n      .on(\"typeahead:asyncrequest\", function() {\n        // Enable spinner\n        $(self.input)\n        .parent()\n        .addClass(\"input-loading\");\n      })\n      .on(\"typeahead:asynccancel typeahead:asyncreceive\", function() {\n        // Disable spinner\n        $(self.input)\n        .parent()\n        .removeClass(\"input-loading\");\n      });\n\n      // Change parent (wrapper) display from inline-block to block\n      $(this.input)\n      .parent()\n      .css(\"display\", \"block\");\n    }\n\n  }\n});\n\n// Enable custom editor type\nwindow.JSONEditor.defaults.resolvers.unshift(function(schema) {\n  if (schema.type === \"string\" && schema.format === \"typeahead\") return \"typeahead\";\n});\n\n\n// The following lines are mandatory and readonly. You can add custom code above and below.\nif (jseditor instanceof window.JSONEditor) jseditor.destroy();\njseditor = new window.JSONEditor(document.querySelector(\"#json-editor-form\"), jedata);",   
  "style": ".tt-query {\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n.tt-hint {\n  color: #999;\n}\n.tt-menu {\n  width: 100%;\n  min-width: 200px;\n  padding: 4px 0;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n}\n.tt-suggestion {\n  padding: 3px 20px;\n  line-height: 24px;\n}\n.tt-suggestion.tt-cursor,\n.tt-suggestion:hover {\n  color: #fff;\n  background-color: #0097cf;\n}\n.tt-suggestion p {\n  margin: 0;\n}\n.input-loading {}\n.input-loading:after {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  content: \"\\e030\";\n  font-family: \"Glyphicons Halflings\";\n  color: #0097cf;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1;\n  transform: rotate(0deg);\n  animation: spinner 1s linear infinite;\n}\n@keyframes spinner {\n  100% {\n    transform: rotate(359deg);\n  }\n}",
  "desc": "<p>This example shows how create a custom editor for autocomplete/autosuggest using Twitter Typeahead + Bloodhound plugins.</p><p>The example uses the Danish Roadname API (because it doesn't require any authentication ðŸ˜„), but you can use whatever API you like (See the <a href='https://github.com/corejavascript/typeahead.js'>documentation</a> for Typeahead/Bloodhound)</p>"
}